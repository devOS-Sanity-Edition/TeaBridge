plugins {
	id "fabric-loom" version "1.0-SNAPSHOT"
	id "maven-publish"
	id "io.github.juuxel.loom-vineflower" version "1.+"
	id "org.ajoberstar.grgit" version '4.1.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-mc${project.minecraft_version}-rev.${grgit.head().abbreviatedId}"
group = project.maven_group

repositories {
	maven {
		url = "https://m2.dv8tion.net/releases/"
		content { includeGroup "net.dv8tion" }
	}
	maven {
		url = "https://maven.nucleoid.xyz/"
		content { includeGroup "eu.pb4" }
	}
	maven {
		url = "https://maven.proxyfox.dev/"
		content { includeGroup "dev.proxyfox" }
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation(fabricApi.module("fabric-api-base", project.fabric_version))
	modImplementation(fabricApi.module("fabric-command-api-v2", project.fabric_version))
	modImplementation(fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version))
	modImplementation(fabricApi.module("fabric-message-api-v1", project.fabric_version))

	include(implementation("net.dv8tion:JDA:5.0.0-beta.13"){
		exclude module: "opus-java"
	})
	include("net.sf.trove4j:trove4j:3.0.3")
	include("org.apache.commons:commons-collections4:4.4")
	include("com.fasterxml.jackson.core:jackson-core:2.14.1")
	include("com.fasterxml.jackson.core:jackson-databind:2.14.1")
	include("com.fasterxml.jackson.core:jackson-annotations:2.14.1")
	include("com.squareup.okhttp3:okhttp:4.9.3")
	include("com.squareup.okio:okio-jvm:3.2.0")
	include("com.neovisionaries:nv-websocket-client:2.14")
	// for "squareup.x" libs (they all use kotlin) and MarKt
	modLocalRuntime("net.fabricmc:fabric-language-kotlin:1.9.1+kotlin.1.8.10")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"mcversion": project.minecraft_version
	}
}

java {
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

tasks.withType(AbstractArchiveTask) {
	preserveFileTimestamps = false
	reproducibleFileOrder = true
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

task buildOrPublish {
	group = "build"
	String mavenUser = System.getenv().MAVEN_USER
	if (mavenUser != null && !mavenUser.isEmpty()) {
		dependsOn(tasks.getByName("publish"))
		println("prepared for publish")
	} else {
		dependsOn(tasks.getByName("build"))
		println("prepared for build")
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId = project.maven_group
			artifactId = project.archives_base_name
			version = "${project.mod_version}-rev.${grgit.head().abbreviatedId}"

			from components.java
		}
	}

	repositories {
		maven {
			url = "https://mvn.devos.one/${System.getenv().PUBLISH_SUFFIX}/"
			credentials {
				username = System.getenv().MAVEN_USER
				password = System.getenv().MAVEN_PASS
			}
			authentication { basic(BasicAuthentication) }
		}
	}
}