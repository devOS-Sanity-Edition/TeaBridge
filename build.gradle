plugins {
	id "fabric-loom" version "1.0-SNAPSHOT"
	id "io.github.juuxel.loom-quiltflower" version "1.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version

repositories {
	maven {
		url = "https://m2.dv8tion.net/releases/"
		content { includeGroup "net.dv8tion" }
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation(fabricApi.module("fabric-api-base", project.fabric_version))
	modImplementation(fabricApi.module("fabric-command-api-v2", project.fabric_version))
	modImplementation(fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version))

	include(implementation("net.dv8tion:JDA:5.0.0-beta.2"){
		exclude module: "opus-java"
	})
	include("net.sf.trove4j:trove4j:3.0.3")
	include("org.apache.commons:commons-collections4:4.4")
	include("com.fasterxml.jackson.core:jackson-core:2.14.1")
	include("com.fasterxml.jackson.core:jackson-databind:2.14.1")
	include("com.fasterxml.jackson.core:jackson-annotations:2.14.1")
	include("com.squareup.okhttp3:okhttp:4.9.3")
	include("com.squareup.okio:okio-jvm:3.2.0")
	include("com.neovisionaries:nv-websocket-client:2.14")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
